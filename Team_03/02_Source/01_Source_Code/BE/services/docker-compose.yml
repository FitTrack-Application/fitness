version: "3.8"

services:
  postgres:
    image: postgres:15
    container_name: fitness-postgres
    ports:
      - "${POSTGRES_PORT:-15432}:5432"
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - fitness-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  fit-service:
    build:
      context: ./fit-service
      dockerfile: Dockerfile.dev
    container_name: fit-service
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${FIT_SERVICE_PORT:-8080}:8080"
    env_file:
      - .env
      - ./fit-service/.env
    environment:
      - POSTGRESQL_DB_HOST=ep-tight-flower-a1w3np3d-pooler.ap-southeast-1.aws.neon.tech
      - POSTGRESQL_DB_NAME=${FIT_DB_NAME}
    networks:
      - fitness-network
    volumes:
      - ./fit-service:/app
      - maven-repo:/root/.m2
    restart: unless-stopped

  statistic-service:
    build:
      context: ./statistic-service
      dockerfile: Dockerfile.dev
    container_name: statistic-service
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "${STATISTIC_SERVICE_PORT:-8081}:8081"
    env_file:
      - .env
      - ./statistic-service/.env
    environment:
      - POSTGRESQL_DB_HOST=ep-tight-flower-a1w3np3d-pooler.ap-southeast-1.aws.neon.tech
      - POSTGRESQL_DB_NAME=${STATISTIC_DB_NAME}
    networks:
      - fitness-network
    volumes:
      - ./statistic-service:/app
      - maven-repo:/root/.m2
    restart: unless-stopped

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile.dev
    container_name: user-service
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8082:8082"
    env_file:
      - .env
      - ./user-service/.env
    environment:
      - POSTGRESQL_DB_HOST=ep-tight-flower-a1w3np3d-pooler.ap-southeast-1.aws.neon.tech
      - POSTGRESQL_DB_NAME=${USER_DB_NAME}
    networks:
      - fitness-network
    volumes:
      - ./user-service:/app
      - maven-repo:/root/.m2
    restart: unless-stopped
networks:
  fitness-network:
    driver: bridge

volumes:
  postgres-data:
  maven-repo:
