name: CI/CD Pipeline - Statistic Service

on:
  push:
    branches:
      - 'main'
      - 'bedev'
    paths: 
      - 'Team_03/02_Source/01_Source_Code/BE/services/statistic-service/**'
      - '.github/workflows/deploy-statistic-service.yml'
  pull_request:
    branches: 
      - 'main'
      - 'bedev'
    paths: 
      - 'Team_03/02_Source/01_Source_Code/BE/services/statistic-service/**'
      - '.github/workflows/deploy-statistic-service.yml'

jobs:
  build-statistic-service:
    runs-on: ubuntu-latest
    environment: Azure
    if: github.ref == 'refs/heads/bedev' || github.ref == 'refs/heads/main'
    steps:
    - name: âœ… Checkout Code
      uses: actions/checkout@v4
    
    - name: â­• Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: "zulu"
        cache: maven
      
    # - name: ðŸ§ª Run Unit Tests
    #   run: |
    #     cd Team_03/02_Source/01_Source_Code/BE/services/food-service
    #     mvn test
    #   continue-on-error: false
              
    - name: ðŸ”Ž Build the Spring Boot application
      run: |
        cd Team_03/02_Source/01_Source_Code/BE/services/statistic-service
        mvn clean package -DskipTests

    - name: ðŸ”‘ Log in to Azure Container Registry
      uses: azure/docker-login@v1
      with: 
        login-server: ${{ secrets.ACR_LOGIN_SERVER }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
  
    - name: ðŸš© Build and Push Docker image to ACR
      run: |
        cd Team_03/02_Source/01_Source_Code/BE/services/statistic-service
        docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/statistic-service:${{ github.sha }} .
        docker push ${{ secrets.ACR_LOGIN_SERVER }}/statistic-service:${{ github.sha }}
      
    - name: ðŸ§¹ Clean up Docker images
      if: always()
      run: |
        docker image prune -f
      
  deploy-statistic-service:
    needs: build-statistic-service
    runs-on: ubuntu-latest
    environment: Azure
    if: github.ref == 'refs/heads/bedev' || github.ref == 'refs/heads/main'
    steps:
    - name: âœ… Checkout Code
      uses: actions/checkout@v4

    - name: ðŸ”‘ Login to Azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        
    - name: ðŸš© Deploy to Azure Container Apps
      uses: azure/container-apps-deploy-action@v1
      with:
        resourceGroup: ${{ secrets.AZURE_RESOURCE_GROUP }}
        containerAppName: statistic-service
        imageToDeploy: ${{ secrets.ACR_LOGIN_SERVER }}/statistic-service:${{ github.sha }}
        targetPort: 8081
        ingress: internal
        location: ${{ secrets.AZURE_LOCATION }}

    - name: ðŸ”Ž Verify Deployment
      run: |
        az containerapp show --name statistic-service --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --query "properties.latestRevisionName" -o tsv
        az containerapp revision list --name statistic-service --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --query "[0].properties.runningStatus"
      continue-on-error: true