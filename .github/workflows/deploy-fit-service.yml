name: Deploy Fit Service

on:
  push:
    branches:
      - 'main'
      - 'dev'
    paths: 
      - 'Team_03/02_Source/01_Source_Code/BE/services/fit-service/**'
  pull_request:
    branches: 
      - 'main'
      - 'dev'
    paths: 
      - 'Team_03/02_Source/01_Source_Code/BE/services/fit-service/**'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
              
    - name: Setup environment variables
      run: |
        cat > .env << EOF
        POSTGRESQL_DB_HOST=${{ secrets.FITNESS_SERVICE_POSTGRESQL_DB_HOST }}
        POSTGRESQL_DB_PORT=${{ secrets.FITNESS_SERVICE_POSTGRESQL_DB_PORT }}
        POSTGRESQL_DB_NAME=${{ secrets.FITNESS_SERVICE_POSTGRESQL_DB_NAME }}
        POSTGRESQL_DB_USERNAME=${{ secrets.FITNESS_SERVICE_POSTGRESQL_DB_USERNAME }}
        POSTGRESQL_DB_PASSWORD=${{ secrets.FITNESS_SERVICE_POSTGRESQL_DB_PASSWORD }}
        EOF

        export $(grep -v '^#' .env | xargs)

    - name: Setup environment variables
      run: |
        echo "${{ secrets.FITNESS_DATABASE_CONFIG }}" > .env
      
    - name: Generate application.properties
      run: |
        cat <<EOF > Team_03/02_Source/01_Source_Code/BE/services/fit-service/src/main/resources/application.properties
        spring.datasource.url=jdbc:postgresql://${POSTGRESQL_DB_HOST}/${POSTGRESQL_DB_NAME}?sslmode=require
        spring.datasource.username=${POSTGRESQL_DB_USERNAME}
        spring.datasource.password=${POSTGRESQL_DB_PASSWORD}
        EOF
                
    - name: Check Environment Variables
      run: |
        echo "üìå Ki·ªÉm tra n·ªôi dung file .env:"
        cat .env

        echo "üìå Ki·ªÉm tra gi√° tr·ªã bi·∫øn m√¥i tr∆∞·ªùng:"
        echo "POSTGRESQL_DB_HOST=${POSTGRESQL_DB_HOST}"

    - name: Build fit-service with Maven
      run: mvn -B clean package --file Team_03/02_Source/01_Source_Code/BE/services/fit-service/pom.xml

    - name: Login to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker Image
      run: |
        cd Team_03/02_Source/01_Source_Code/BE/services/fit-service
        docker build -t ${{ secrets.DOCKER_USERNAME }}/fitness-server:latest .

    - name: Push Image to DockerHub
      run: docker push ${{ secrets.DOCKER_USERNAME }}/fitness-server:latest

    - name: Deploy to Render
      run: |
        curl -X POST "https://api.render.com/deploy/srv-0000000?key=${{ secrets.FITNESS_RENDER_DEPLOY_KEY }}"
    
